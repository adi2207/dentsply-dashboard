[{"C:\\Users\\aditi\\Desktop\\react-dashboard - Copy\\src\\App.js":"1","C:\\Users\\aditi\\Desktop\\react-dashboard\\src\\index.js":"2","C:\\Users\\aditi\\Desktop\\react-dashboard\\src\\reportWebVitals.js":"3","C:\\Users\\aditi\\Desktop\\react-dashboard\\src\\App.js":"4","C:\\Users\\aditi\\Desktop\\react-dashboard\\src\\Components\\UserProfile\\UserProfile.jsx":"5","C:\\Users\\aditi\\Desktop\\react-dashboard\\src\\Components\\Sidebar\\Sidebar.js":"6","C:\\Users\\aditi\\Desktop\\react-dashboard\\src\\Components\\Navbar\\Navbar.js":"7","C:\\Users\\aditi\\Desktop\\react-dashboard\\src\\Components\\Main\\Main.jsx":"8","C:\\Users\\aditi\\Desktop\\react-dashboard\\src\\Components\\Dashboard\\Dashboard.jsx":"9","C:\\Users\\aditi\\Desktop\\react-dashboard\\src\\Components\\Charts\\Worldmap.jsx":"10","C:\\Users\\aditi\\Desktop\\react-dashboard\\src\\Components\\Charts\\Barchart.jsx":"11","C:\\Users\\aditi\\Desktop\\react-dashboard\\src\\Components\\Charts\\Piechart.jsx":"12","C:\\Users\\aditi\\Desktop\\react-dashboard\\src\\router.js":"13","C:\\Users\\aditi\\Desktop\\react-dashboard\\src\\Components\\Form\\Form.jsx":"14"},{"size":893,"mtime":1614674685711,"results":"15","hashOfConfig":"16"},{"size":500,"mtime":1614056712473,"results":"17","hashOfConfig":"18"},{"size":362,"mtime":1614056712531,"results":"19","hashOfConfig":"18"},{"size":1433,"mtime":1615792186269,"results":"20","hashOfConfig":"18"},{"size":3236,"mtime":1615189700540,"results":"21","hashOfConfig":"18"},{"size":3294,"mtime":1615204006122,"results":"22","hashOfConfig":"18"},{"size":1691,"mtime":1615792192856,"results":"23","hashOfConfig":"18"},{"size":5753,"mtime":1615738984901,"results":"24","hashOfConfig":"18"},{"size":3873,"mtime":1615189713557,"results":"25","hashOfConfig":"18"},{"size":2291,"mtime":1614780795200,"results":"26","hashOfConfig":"18"},{"size":7086,"mtime":1615738907943,"results":"27","hashOfConfig":"18"},{"size":1276,"mtime":1614780805717,"results":"28","hashOfConfig":"18"},{"size":199,"mtime":1615204320876,"results":"29","hashOfConfig":"18"},{"size":4717,"mtime":1615738024389,"results":"30","hashOfConfig":"18"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"l0x45f",{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},"xypu0h",{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"35"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"47","messages":"48","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"35"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"35"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"35"},"C:\\Users\\aditi\\Desktop\\react-dashboard - Copy\\src\\App.js",["65"],"C:\\Users\\aditi\\Desktop\\react-dashboard\\src\\index.js",[],["66","67"],"C:\\Users\\aditi\\Desktop\\react-dashboard\\src\\reportWebVitals.js",[],"C:\\Users\\aditi\\Desktop\\react-dashboard\\src\\App.js",["68"],"C:\\Users\\aditi\\Desktop\\react-dashboard\\src\\Components\\UserProfile\\UserProfile.jsx",[],"C:\\Users\\aditi\\Desktop\\react-dashboard\\src\\Components\\Sidebar\\Sidebar.js",["69","70"],"import '../Sidebar/Sidebar.css';\r\nimport avatar from \"../../Assets/avatar.jpg\";\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\n\r\nconst Sidebar = ({sidebarOpen, closeSidebar }) => {\r\n    return(\r\n        <div className={sidebarOpen?\"sidebar-responsive\":\"\"} id=\"sidebar\">\r\n         <div className=\"sidebar__title\">\r\n            <div className=\"sidebar__img\">\r\n                 <img src={avatar} alt=\"logo\"/>\r\n                 <div className=\"sidebar__user \">\r\n                    <h5 href=\"#\">Welcome</h5>\r\n                    <a href=\"#\">Denstply</a>\r\n                </div>\r\n            </div>\r\n             <i className=\"fa fa-times\" \r\n             id=\"sidebarIcon\" \r\n             onClick={() => closeSidebar()}></i>\r\n         </div>\r\n             <div className=\"sidebar__menu\">\r\n                 {/* <div className=\"sidebar__link active_menu_link\">\r\n                     <i className=\"fa fa-home\"></i>\r\n                     <a href=\"/\">Home</a>\r\n                 </div> */}\r\n\r\n                 <NavLink className=\"sidebar__link\" activeClassName=\"active_menu_link\" to=\"/home\">\r\n                 <i className=\"fa fa-home\"></i>Home\r\n                </NavLink>\r\n                 {/* <div className=\"sidebar__title \">\r\n                    <h4>MNG</h4>\r\n                </div> */}\r\n                 <NavLink className=\"sidebar__link\" activeClassName=\"active_menu_link\" to=\"/dashboard\">\r\n                    <i className=\"fa fa-user-secret\"></i>Dashboard\r\n                </NavLink>\r\n\r\n                 <NavLink className=\"sidebar__link\" activeClassName=\"active_menu_link\" to=\"/userprofile\">\r\n                    <i className=\"fa fa-building-o\"></i>My Profile\r\n                </NavLink>\r\n                \r\n                <NavLink className=\"sidebar__link\" activeClassName=\"active_menu_link\" to=\"/comingsoon\">\r\n                    <i className=\"fa fa-wrench\"></i>Coming soon\r\n                </NavLink>\r\n                 {/* <div className=\"sidebar__link\">\r\n                     <i className=\"fa fa-archive\"></i>\r\n                 </div>\r\n                 <div className=\"sidebar__link\">\r\n                     <i className=\"fa fa-handshake-o\"></i>\r\n                 </div>\r\n                 <h2>LEAVE</h2>\r\n                 <div className=\"sidebar__link\">\r\n                     <i className=\"fa fa-question\"></i>\r\n                 </div>\r\n                 <div className=\"sidebar__link\">\r\n                     <i className=\"fa fa-sign-out\"></i>\r\n                 </div>\r\n                 <div className=\"sidebar__link\">\r\n                     <i className=\"fa fa-calendar-check-o\"></i>\r\n                 </div>\r\n                 <div className=\"sidebar__link\">\r\n                     <i className=\"fa fa-files-o\"></i>\r\n                 </div>\r\n                 <h2>PAYROLL</h2>\r\n                 <div className=\"sidebar__link\">\r\n                     <i className=\"fa fa-money\"></i>\r\n                 </div>\r\n                 <div className=\"sidebar__link\">\r\n                     <i className=\"fa fa-briefcase\"></i>\r\n                 </div> */}\r\n                 <div className=\"sidebar__logout\">\r\n                     <i className=\"fa fa-power-off\"></i>\r\n                     <a href=\"#\">Log out</a>\r\n                 </div>\r\n             </div>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default Sidebar;","C:\\Users\\aditi\\Desktop\\react-dashboard\\src\\Components\\Navbar\\Navbar.js",["71","72"],"C:\\Users\\aditi\\Desktop\\react-dashboard\\src\\Components\\Main\\Main.jsx",["73","74","75"],"import './Main.css';\r\nimport Barchart from '../Charts/Barchart'\r\nimport Piechart from '../Charts/Piechart'\r\nimport Worldmap from '../Charts/Worldmap'\r\nimport Form from '../Form/Form'\r\nimport React, { useState } from 'react';\r\n\r\n const data = {\r\n    numberofSuplliers: \"578\",\r\n    numberOfOrders: \"3916\",\r\n    totalSales: \"10,290\",\r\n    cappedRevenue:\"20,030\",\r\n    totalgrowth:15\r\n\r\n}\r\n\r\nconst Main = () => {\r\n    const [chartValue, setChartValue] = useState('')\r\n    const [loading, setLoading]= useState(false);\r\n    function handleChange(e) {\r\n        setChartValue(e.target.value);\r\n    }\r\n    const [productValue, setProductValue] = useState('')\r\n    const [formData, setFormData] = useState([]);\r\n\r\n    function handleProductChange(e) {\r\n        setChartValue(e.target.value);\r\n    }\r\n\r\n    const onPredict = (formDataReceived) => {    \r\n        setLoading(true);\r\n        setFormData(formDataReceived);\r\n        setLoading(false);\r\n      };\r\n\r\n      if(loading){\r\n          return null;\r\n      }\r\n      else{\r\n    return(\r\n       <main>\r\n           <div className=\"main__container\">\r\n               <Form onPredict={onPredict}></Form>\r\n               {/* <div className=\"main__title\">\r\n                   <div className=\"main__greeting\">\r\n                  <img src={hello} alt=\"hello\"/>\r\n                   <h1>hello Dentsply</h1>\r\n                   <p>Welcome to your admin Dashboard</p>\r\n               </div>\r\n           </div> */}\r\n           {/* <select onChange={handleChange} selected={chartValue}>\r\n                <option value=\"\">none</option>\r\n                <option value=\"2019\">2019</option>\r\n                <option value=\"2020\">2020</option>\r\n            </select>\r\n            <select onChange={handleProductChange} selected={chartValue}>\r\n                <option value=\"\">none</option>\r\n                <option value=\"p1\">product 1</option>\r\n                <option value=\"p2\">product 2</option>\r\n                <option value=\"p3\">product 3</option>\r\n            </select> */}\r\n           <div className=\"main__cards\">\r\n               <div className=\"card\">\r\n                   <i className=\"fa fa-user-o fa-2x text-lightblue\"></i>\r\n                   <div className=\"card_inner\">\r\n                       <p className=\"text-primary-p\">Number of suppliers</p>\r\n                         <span className=\"font-bold text-title\">{data.numberofSuplliers}</span>\r\n                   </div>\r\n               </div>\r\n               <div className=\"card\">\r\n                   <i className=\"fa fa-calendar fa-2x text-red\"></i>\r\n                   <div className=\"card_inner\">\r\n                       <p className=\"text-primary-p\">Number of Orders</p>\r\n                        <span className=\"font-bold text-title\">{data.numberOfOrders}</span>\r\n                   </div>\r\n               </div>\r\n               <div className=\"card\">\r\n                   <i className=\"fa fa-shopping-cart fa-2x text-yellow\"></i>\r\n                   <div className=\"card_inner\">\r\n                       <p className=\"text-primary-p\">Product Sales</p>\r\n                        <span className=\"font-bold text-title\">{data.totalSales}</span>\r\n                   </div>\r\n               </div>\r\n\r\n               <div className=\"card\">\r\n                   <i className=\"fa fa-usd fa-2x text-green\"></i>\r\n                   <div className=\"card_inner\">\r\n                       <p className=\"text-primary-p\">Capped Revenue</p>\r\n                        <span className=\"font-bold text-title\">{data.cappedRevenue}</span>\r\n                   </div>\r\n               </div>\r\n             </div>\r\n\r\n            {/* <div className=\"charts\">\r\n                <div className=\"charts__left\">\r\n                    <div className=\"charts__left__title\">\r\n                        <div>\r\n                            <h1>Daily Reports</h1>\r\n                            <p>Cupertino, California, USA</p>\r\n                        </div>\r\n                        <i className=\"fa fa-usd\"></i>\r\n                    </div>\r\n                    <Chart />\r\n                </div>\r\n                <div className=\"charts__right\">\r\n                    <div className=\"charts__right__title\">\r\n                        <div>\r\n                            <h1>Stats Reports of January</h1>\r\n                            <p>Cupertino, California, USA</p>\r\n                        </div>\r\n                        <i className=\"fa fa-use\"></i>\r\n                    </div>\r\n                    <div className=\"charts__right__cards\">\r\n                        <div className=\"card1\">\r\n                            <h1>Income</h1>\r\n                            <p>$75,300</p>\r\n                        </div>\r\n\r\n                        <div className=\"card2\">\r\n                            <h1>Sales</h1>\r\n                            <p>$124,200</p>\r\n                        </div>\r\n\r\n                        <div className=\"card3\">\r\n                            <h1>Users</h1>\r\n                            <p>3900</p>\r\n                        </div>\r\n\r\n                        <div className=\"card4\">\r\n                            <h1>Orders</h1>\r\n                            <p>1881</p>\r\n                        </div>\r\n\r\n\r\n                    </div>\r\n                </div>\r\n            </div> */}\r\n            <div className=\"chart-spacing\">\r\n                <Barchart formData={formData} chartValue={chartValue}  productValue={productValue}/>\r\n            </div>\r\n            <div className=\"charts\">\r\n                <div className=\"charts__left\">\r\n                <Piechart/> \r\n                </div>\r\n                <div className=\"charts__right\">\r\n                <Worldmap/>\r\n                </div>\r\n            </div>\r\n           </div>\r\n       </main>\r\n    )\r\n        }\r\n}\r\nexport default Main;","C:\\Users\\aditi\\Desktop\\react-dashboard\\src\\Components\\Dashboard\\Dashboard.jsx",[],"C:\\Users\\aditi\\Desktop\\react-dashboard\\src\\Components\\Charts\\Worldmap.jsx",[],"C:\\Users\\aditi\\Desktop\\react-dashboard\\src\\Components\\Charts\\Barchart.jsx",["76","77","78","79","80"],"import React, { useState, useEffect } from 'react';\r\nimport ReactFC from \"react-fusioncharts\";\r\nimport FusionCharts from \"fusioncharts\";\r\nimport Column2D from \"fusioncharts/fusioncharts.charts\";\r\nimport FusionTheme from \"fusioncharts/themes/fusioncharts.theme.fusion\";\r\nReactFC.fcRoot(FusionCharts, Column2D, FusionTheme);\r\nfunction Barchart(props) {\r\n  const [prevYearData, setPrevYearData] = useState([])\r\n  const [currentYearData, setCurrentYearData] = useState([])\r\n\r\n  useEffect(() => {\r\n    console.log(\"here\",props.formData);\r\n  }, [props.formData])\r\n // STEP 2- Define the categories representing the labels on the X-axis\r\nconst categories =  [\r\n  {\r\n    \"category\": [\r\n      { \"label\": \"Jan\" },\r\n      { \"label\": \"Feb\" },\r\n      { \"label\": \"Mar\" },\r\n      { \"label\": \"Apr\" },\r\n      { \"label\": \"May\" },\r\n      { \"label\": \"Jun\" },\r\n      { \"label\": \"Jul\" },\r\n      { \"label\": \"Aug\" },\r\n      { \"label\": \"Sept\" },\r\n      { \"label\": \"Oct\" },\r\n      { \"label\": \"Nov\" },\r\n      { \"label\": \"Dec\" }\r\n    ]\r\n  }\r\n]\r\nuseEffect(() => {\r\n  if(props.chartValue==\"2019\"){\r\n    setPrevYearData([\r\n      { \"value\": \"12000\" },\r\n      { \"value\": \"24000\" },\r\n      { \"value\": \"8000\" },\r\n      { \"value\": \"7000\" },\r\n      { \"value\": \"12000\" },\r\n      { \"value\": \"24000\" },\r\n      { \"value\": \"8000\" },\r\n      { \"value\": \"7000\" },\r\n      { \"value\": \"12000\" },\r\n      { \"value\": \"24000\" },\r\n      { \"value\": \"8000\" },\r\n      { \"value\": \"7000\" }\r\n    ])\r\n    \r\n    setCurrentYearData([\r\n      { \"value\": \"24400\" },\r\n      { \"value\": \"9000\" },\r\n      { \"value\": \"7000\" },\r\n      { \"value\": \"36000\" },\r\n      { \"value\": \"24400\" },\r\n      { \"value\": \"9000\" },\r\n      { \"value\": \"7000\" },\r\n      { \"value\": \"36000\" },\r\n      { \"value\": \"24400\" },\r\n      { \"value\": \"9000\" },\r\n      { \"value\": \"7000\" },\r\n      { \"value\": \"36000\" }\r\n    ]);\r\n  }\r\n  else if(props.chartValue==\"2020\"){\r\n    setPrevYearData([\r\n      { \"value\": \"14000\" },\r\n      { \"value\": \"10500\" },\r\n      { \"value\": \"16000\" },\r\n      { \"value\": \"12700\" },\r\n      { \"value\": \"24400\" },\r\n      { \"value\": \"9000\" },\r\n      { \"value\": \"7000\" },\r\n      { \"value\": \"36000\" },\r\n      { \"value\": \"24400\" },\r\n      { \"value\": \"9000\" },\r\n      { \"value\": \"7000\" },\r\n      { \"value\": \"36000\" }\r\n    ])\r\n    \r\n    setCurrentYearData([\r\n      { \"value\": \"30000\" },\r\n      { \"value\": \"29800\" },\r\n      { \"value\": \"27600\" },\r\n      { \"value\": \"8600\" },\r\n      { \"value\": \"24400\" },\r\n      { \"value\": \"9000\" },\r\n      { \"value\": \"7000\" },\r\n      { \"value\": \"36000\" },\r\n      { \"value\": \"24400\" },\r\n      { \"value\": \"9000\" },\r\n      { \"value\": \"7000\" },\r\n      { \"value\": \"36000\" }\r\n    ]);\r\n  }\r\n  else if(props.chartValue==\"p3\"){\r\n    setPrevYearData([\r\n      { \"value\": \"1400\" },\r\n      { \"value\": \"15500\" },\r\n      { \"value\": \"12000\" },\r\n      { \"value\": \"15700\" },\r\n      { \"value\": \"20400\" },\r\n      { \"value\": \"5700\" },\r\n      { \"value\": \"8500\" },\r\n      { \"value\": \"30000\" },\r\n      { \"value\": \"20400\" },\r\n      { \"value\": \"10000\" },\r\n      { \"value\": \"17000\" },\r\n      { \"value\": \"30000\" }\r\n    ])\r\n    \r\n    setCurrentYearData([\r\n      { \"value\": \"12000\" },\r\n      { \"value\": \"20800\" },\r\n      { \"value\": \"20600\" },\r\n      { \"value\": \"18600\" },\r\n      { \"value\": \"20400\" },\r\n      { \"value\": \"19000\" },\r\n      { \"value\": \"17000\" },\r\n      { \"value\": \"39000\" },\r\n      { \"value\": \"20400\" },\r\n      { \"value\": \"10000\" },\r\n      { \"value\": \"8000\" },\r\n      { \"value\": \"30000\" }\r\n    ]);\r\n  }  else if(props.chartValue==\"p1\"){\r\n    setPrevYearData([\r\n      { \"value\": \"10000\" },\r\n      { \"value\": \"15500\" },\r\n      { \"value\": \"15000\" },\r\n      { \"value\": \"13700\" },\r\n      { \"value\": \"27400\" },\r\n      { \"value\": \"9000\" },\r\n      { \"value\": \"7000\" },\r\n      { \"value\": \"38000\" },\r\n      { \"value\": \"24400\" },\r\n      { \"value\": \"8000\" },\r\n      { \"value\": \"17000\" },\r\n      { \"value\": \"30000\" }\r\n    ])\r\n    \r\n    setCurrentYearData([\r\n      { \"value\": \"20000\" },\r\n      { \"value\": \"19800\" },\r\n      { \"value\": \"17600\" },\r\n      { \"value\": \"18600\" },\r\n      { \"value\": \"20400\" },\r\n      { \"value\": \"19000\" },\r\n      { \"value\": \"17000\" },\r\n      { \"value\": \"36000\" },\r\n      { \"value\": \"24400\" },\r\n      { \"value\": \"29000\" },\r\n      { \"value\": \"27000\" },\r\n      { \"value\": \"36000\" }\r\n    ]);\r\n  }  else if(props.chartValue==\"p2\"){\r\n    setPrevYearData([\r\n      { \"value\": \"14000\" },\r\n      { \"value\": \"11500\" },\r\n      { \"value\": \"18000\" },\r\n      { \"value\": \"15700\" },\r\n      { \"value\": \"22400\" },\r\n      { \"value\": \"19000\" },\r\n      { \"value\": \"17000\" },\r\n      { \"value\": \"36000\" },\r\n      { \"value\": \"24400\" },\r\n      { \"value\": \"19000\" },\r\n      { \"value\": \"23000\" },\r\n      { \"value\": \"12000\" }\r\n    ])\r\n    \r\n    setCurrentYearData([\r\n      { \"value\": \"20000\" },\r\n      { \"value\": \"29800\" },\r\n      { \"value\": \"27600\" },\r\n      { \"value\": \"18600\" },\r\n      { \"value\": \"34400\" },\r\n      { \"value\": \"19000\" },\r\n      { \"value\": \"17000\" },\r\n      { \"value\": \"36000\" },\r\n      { \"value\": \"24400\" },\r\n      { \"value\": \"17000\" },\r\n      { \"value\": \"15000\" },\r\n      { \"value\": \"12000\" }\r\n    ]);\r\n  }\r\n  else{\r\n      setPrevYearData([\r\n        { \"value\": \"11000\" },\r\n        { \"value\": \"10500\" },\r\n        { \"value\": \"20500\" },\r\n        { \"value\": \"15000\" },\r\n        { \"value\": \"11000\" },\r\n        { \"value\": \"17500\" },\r\n        { \"value\": \"22500\" },\r\n        { \"value\": \"20000\" },\r\n        { \"value\": \"12000\" },\r\n        { \"value\": \"10500\" },\r\n        { \"value\": \"23500\" },\r\n        { \"value\": \"16000\" }\r\n      ])\r\n      \r\n      setCurrentYearData([\r\n        { \"value\": \"24400\" },\r\n        { \"value\": \"28800\" },\r\n        { \"value\": \"24800\" },\r\n        { \"value\": \"29800\" },\r\n        { \"value\": \"22000\" },\r\n        { \"value\": \"17500\" },\r\n        { \"value\": \"23500\" },\r\n        { \"value\": \"16000\" },\r\n        { \"value\": \"19000\" },\r\n        { \"value\": \"10500\" },\r\n        { \"value\": \"22500\" },\r\n        { \"value\": \"16000\" }\r\n      ]);\r\n  }\r\n}, [props.chartValue])\r\n// STEP 3- Construct the dataset comprising multiple series\r\n\r\n\r\nconst dataset = [\r\n  {\r\n    \"seriesname\": \"Base Price\",\r\n    \"data\": prevYearData\r\n  },\r\n  {\r\n    \"seriesname\": \"Predicted Price\",\r\n    \"data\": currentYearData\r\n  }\r\n]\r\n\r\n\r\nconst chartConfigs = {\r\n  type: 'mscolumn2d',// The chart type\r\n  width: '700', // Width of the chart\r\n  height: '400', // Height of the chart\r\n  dataFormat: 'json', // Data type\r\n   dataSource: {\r\n  //Chart Configurations\r\n    \"chart\": {\r\n      \"theme\": \"fusion\",\r\n      \"caption\": \"Comparison of Monthly Prices\",\r\n      \"xAxisname\": \"Months\",\r\n      \"yAxisName\": \"Prices (In USD)\",\r\n      \"numberPrefix\": \"$\",\r\n      \"plotFillAlpha\": \"80\",\r\n      \"divLineIsDashed\": \"1\",\r\n      \"divLineDashLen\": \"1\",\r\n      \"divLineGapLen\": \"1\"\r\n    },\r\n    \"trendlines\": [{\r\n        \"line\": [{\r\n            \"startvalue\": \"17500\",\r\n            \"color\": \"#29C3BE\",\r\n            \"displayvalue\": \"Target - $18K\"\r\n        }]\r\n    }],\r\n\r\n    \"categories\": categories,\r\n    \"dataset\": dataset,\r\n  }\r\n}\r\n  return(\r\n    <div>\r\n      <ReactFC {...chartConfigs} \r\n        width=\"100%\"\r\n        height=\"50%\"\r\n      />\r\n    </div>\r\n  )\r\n\r\n}\r\n\r\nexport default Barchart;\r\n\r\n\r\n","C:\\Users\\aditi\\Desktop\\react-dashboard\\src\\Components\\Charts\\Piechart.jsx",[],["81","82"],"C:\\Users\\aditi\\Desktop\\react-dashboard\\src\\router.js",[],"C:\\Users\\aditi\\Desktop\\react-dashboard\\src\\Components\\Form\\Form.jsx",["83","84"],"import './form.css';\r\n\r\nimport React, { useState, useReducer } from 'react';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Card, Button } from '@material-ui/core';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport FormHelperText from '@material-ui/core/FormHelperText';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\nimport NativeSelect from '@material-ui/core/NativeSelect';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    '& .MuiTextField-root': {\r\n      margin: theme.spacing(1),\r\n      width: 200,\r\n    },\r\n    padding: \"1%\",\r\n    width: \"80%\",\r\n    display: \"flex\",\r\n    flexDirection: \"row\",\r\n    alignItems:\"center\",\r\n    margin: \"auto\"\r\n},\r\nformControl: {\r\n    margin: theme.spacing(1),\r\n    width: 200,\r\n  },\r\n  selectEmpty: {\r\n    marginTop: theme.spacing(2),\r\n  },\r\n}));\r\nconst Form = (props) => {\r\n    \r\n    const classes = useStyles();\r\n\r\n    const [country, setCountry]= useState('');\r\n    const [product, setProduct]= useState('');\r\n\r\n    const handleSubmit = e => {\r\n        e.preventDefault();\r\n    \r\n        let data = { formInput };\r\n        props.onPredict(data);\r\n\r\n      };\r\n\r\n    const [formInput, setFormInput] = useReducer(\r\n        (state, newState) => ({ ...state, ...newState }),\r\n        {\r\n            order_quantity: \"\",\r\n            day: \"\",\r\n            country: \"\",\r\n            product: \"\"\r\n        }\r\n      );\r\n\r\n    const handleInput = e => {\r\n        const name = e.target.name;\r\n        const newValue = e.target.value;\r\n        setFormInput({ [name]: newValue });\r\n      };\r\n\r\n      const handleProductInput = e => {\r\n        const name = e.target.name;\r\n        const newValue = e.target.value;\r\n        setProduct(newValue);\r\n        setFormInput({ [name]: newValue });\r\n      };  \r\n      \r\n      const handleCountryInput = e => {\r\n        const name = e.target.name;\r\n        const newValue = e.target.value;\r\n        setCountry(newValue);\r\n        setFormInput({ [name]: newValue });\r\n      };\r\n\r\n    return(\r\n        <React.Fragment>\r\n            <form onSubmit={handleSubmit}>\r\n            <Card className={classes.root} noValidate autoComplete=\"off\">\r\n                <TextField id=\"order_quantity\" name=\"order_quantity\" label=\"Order Quantity\" variant=\"outlined\" onChange={handleInput} />\r\n                <TextField id=\"day\" name=\"day\" label=\"Day\" variant=\"outlined\" onChange={handleInput}/>\r\n                {/* <TextField id=\"product\" name=\"product\" label=\"Product\" variant=\"outlined\" required onChange={handleInput}/> */}\r\n                <FormControl variant=\"outlined\" className={classes.formControl}>\r\n                    <InputLabel htmlFor=\"outlined-age-native-simple\">Product</InputLabel>\r\n                    <Select\r\n                        native\r\n                        name=\"product\"\r\n                        value={product}\r\n                        onChange={handleProductInput}\r\n                        label=\"Product\"\r\n                        inputProps={{\r\n                            name: 'product',\r\n                            id: 'product',\r\n                        }}\r\n                        >\r\n                        <option aria-label=\"None\" value=\"\" />\r\n                        <option value=\"product1\">Product 1</option>\r\n                    </Select>\r\n                </FormControl>\r\n                {/* <TextField id=\"country\" name=\"country\" label=\"Country\" variant=\"outlined\" onChange={handleInput} required/> */}\r\n                <FormControl variant=\"outlined\" className={classes.formControl}>\r\n                    <InputLabel htmlFor=\"outlined-age-native-simple\">Country</InputLabel>\r\n                    <Select\r\n                        native\r\n                        name=\"country\"\r\n                        value={country}\r\n                        onChange={handleCountryInput}\r\n                        label=\"Country\"\r\n                        inputProps={{\r\n                            name: 'country',\r\n                            id: 'country',\r\n                        }}\r\n                        >\r\n                        <option aria-label=\"None\" value=\"\" />\r\n                        <option value=\"us\">US</option>\r\n                    </Select>\r\n                </FormControl>\r\n                {/* <TextField id=\"warehouse\" name=\"warehouse\" label=\"Warehouse\" variant=\"outlined\" onChange={handleInput} required/> */}\r\n                <Button type=\"submit\" variant=\"contained\" color=\"primary\">\r\n                    Predict\r\n                </Button>\r\n            </Card>\r\n            </form>\r\n         </React.Fragment>\r\n\r\n      \r\n    )\r\n}\r\nexport default Form;",{"ruleId":"85","severity":1,"message":"86","line":6,"column":34,"nodeType":"87","messageId":"88","endLine":6,"endColumn":40},{"ruleId":"89","replacedBy":"90"},{"ruleId":"91","replacedBy":"92"},{"ruleId":"85","severity":1,"message":"93","line":7,"column":8,"nodeType":"87","messageId":"88","endLine":7,"endColumn":12},{"ruleId":"94","severity":1,"message":"95","line":14,"column":21,"nodeType":"96","endLine":14,"endColumn":33},{"ruleId":"94","severity":1,"message":"95","line":72,"column":22,"nodeType":"96","endLine":72,"endColumn":34},{"ruleId":"94","severity":1,"message":"95","line":45,"column":17,"nodeType":"96","endLine":45,"endColumn":29},{"ruleId":"94","severity":1,"message":"95","line":48,"column":17,"nodeType":"96","endLine":48,"endColumn":29},{"ruleId":"85","severity":1,"message":"97","line":20,"column":14,"nodeType":"87","messageId":"88","endLine":20,"endColumn":26},{"ruleId":"85","severity":1,"message":"98","line":23,"column":26,"nodeType":"87","messageId":"88","endLine":23,"endColumn":41},{"ruleId":"85","severity":1,"message":"99","line":26,"column":14,"nodeType":"87","messageId":"88","endLine":26,"endColumn":33},{"ruleId":"100","severity":1,"message":"101","line":34,"column":22,"nodeType":"102","messageId":"103","endLine":34,"endColumn":24},{"ruleId":"100","severity":1,"message":"101","line":65,"column":27,"nodeType":"102","messageId":"103","endLine":65,"endColumn":29},{"ruleId":"100","severity":1,"message":"101","line":96,"column":27,"nodeType":"102","messageId":"103","endLine":96,"endColumn":29},{"ruleId":"100","severity":1,"message":"101","line":126,"column":30,"nodeType":"102","messageId":"103","endLine":126,"endColumn":32},{"ruleId":"100","severity":1,"message":"101","line":156,"column":30,"nodeType":"102","messageId":"103","endLine":156,"endColumn":32},{"ruleId":"89","replacedBy":"104"},{"ruleId":"91","replacedBy":"105"},{"ruleId":"85","severity":1,"message":"106","line":8,"column":8,"nodeType":"87","messageId":"88","endLine":8,"endColumn":22},{"ruleId":"85","severity":1,"message":"107","line":11,"column":8,"nodeType":"87","messageId":"88","endLine":11,"endColumn":20},"no-unused-vars","'Switch' is defined but never used.","Identifier","unusedVar","no-native-reassign",["108"],"no-negated-in-lhs",["109"],"'Form' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'handleChange' is defined but never used.","'setProductValue' is assigned a value but never used.","'handleProductChange' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected",["108"],["109"],"'FormHelperText' is defined but never used.","'NativeSelect' is defined but never used.","no-global-assign","no-unsafe-negation"]